{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\trustflight\\\\src\\\\components\\\\Task.js\";\nimport React, { Component } from 'react';\nimport * as controller from '../store/controller.js';\n\nclass Task extends Component {\n  componentDidMount() {\n    document.getElementById(this.props.task.id).checked = this.props.task.done;\n  }\n\n  render() {\n    var task = this.props.task;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"remove\",\n      onClick: () => controller.deleteTask(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, \"\\u2716\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, \"Task:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, task.text), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"Assigned:\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, controller.getEngineersName(task.personID)), \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: task.id,\n      onClick: () => controller.taskDone(task.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 69\n      }\n    }));\n  }\n\n}\n\nexport default Task;","map":{"version":3,"sources":["E:/Code/trustflight/src/components/Task.js"],"names":["React","Component","controller","Task","componentDidMount","document","getElementById","props","task","id","checked","done","render","deleteTask","text","getEngineersName","personID","taskDone"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,UAAZ,MAA4B,wBAA5B;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAGzBG,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,EAAxC,EAA4CC,OAA5C,GAAsD,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,IAAtE;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAIJ,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAE,MAAMN,UAAU,CAACW,UAAX,CAAsBL,IAAI,CAACC,EAA3B,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACM,IAAT,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIZ,UAAU,CAACa,gBAAX,CAA4BP,IAAI,CAACQ,QAAjC,CAAJ,CALJ,oBAKwD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAER,IAAI,CAACC,EAAhC;AAAoC,MAAA,OAAO,EAAE,MAAMP,UAAU,CAACe,QAAX,CAAoBT,IAAI,CAACC,EAAzB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALxD,CADJ;AASH;;AAjBwB;;AAoB7B,eAAeN,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport * as controller from '../store/controller.js'\r\n\r\nclass Task extends Component {\r\n\r\n    \r\n    componentDidMount() {\r\n        document.getElementById(this.props.task.id).checked = this.props.task.done;\r\n    }\r\n    render() {\r\n        var task = this.props.task\r\n        return (\r\n            <div className='task-container'>\r\n                <button id='remove' onClick={() => controller.deleteTask(task.id)}>&#10006;</button>\r\n                <label>Task:</label>\r\n                <p>{task.text}</p>\r\n                <label>Assigned:</label>\r\n                <b>{controller.getEngineersName(task.personID)}</b> <input type='checkbox' id={task.id} onClick={() => controller.taskDone(task.id)}></input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;"]},"metadata":{},"sourceType":"module"}