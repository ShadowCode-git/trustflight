{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\trustflight\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as controller from './store/controller.js';\nimport Task from './components/Task';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: []\n    };\n  }\n\n  resetValues() {\n    document.getElementById('newtask').value = '';\n    document.getElementById('e_name').value = '';\n    document.getElementById('e_role').value = '';\n    this.setState({\n      tasks: controller.getTasks()\n    });\n  }\n\n  addTask() {\n    controller.addTask(document.getElementById('newtask').value, document.getElementById('newtask_e').value);\n    this.resetValues();\n  }\n\n  addEngineer() {\n    controller.addEngineer(document.getElementById('e_name').value, document.getElementById('e_role').value);\n    this.resetValues();\n  }\n\n  handleView() {\n    var user = document.getElementById('view').value;\n    document.getElementById('admin-panel').classList.remove('hide');\n    this.setState({\n      tasks: controller.getTasks()\n    });\n\n    if (user > 0) {\n      document.getElementById('admin-panel').className = 'hide';\n      this.setState({\n        tasks: controller.getTaskforEngineer(user)\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Pick an user: \"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"view\",\n      onChange: () => this.handleView(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, \"Admin\"), controller.getEngineers().map((value, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: value.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }, value.name);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"admin-panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Task:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"newtask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Engineer:\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"newtask_e\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, controller.getEngineers().map((value, index) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: value.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, value.name);\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addTask(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Add task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"e_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Role:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"e_role\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addEngineer(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Add Engineer\"))), this.state.tasks.map((value, index) => {\n      return /*#__PURE__*/React.createElement(Task, {\n        key: index,\n        task: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      });\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Code/trustflight/src/App.js"],"names":["React","Component","controller","Task","App","constructor","props","state","tasks","resetValues","document","getElementById","value","setState","getTasks","addTask","addEngineer","handleView","user","classList","remove","className","getTaskforEngineer","render","getEngineers","map","index","id","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport * as controller from './store/controller.js'\r\nimport Task from './components/Task'\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            tasks: []\r\n        };\r\n      }\r\n\r\n    resetValues() {\r\n        document.getElementById('newtask').value = ''\r\n        document.getElementById('e_name').value = ''\r\n        document.getElementById('e_role').value = ''\r\n        this.setState({tasks: controller.getTasks()})\r\n    }\r\n\r\n    addTask() {\r\n        controller.addTask(document.getElementById('newtask').value, document.getElementById('newtask_e').value)\r\n        this.resetValues();\r\n    }\r\n\r\n    addEngineer() {\r\n        controller.addEngineer( document.getElementById('e_name').value, document.getElementById('e_role').value)\r\n        this.resetValues()\r\n    }\r\n    handleView() {\r\n        var user = document.getElementById('view').value;\r\n        document.getElementById('admin-panel').classList.remove('hide')\r\n        this.setState({tasks: controller.getTasks()})\r\n        if( user > 0) {\r\n            document.getElementById('admin-panel').className = 'hide'\r\n            this.setState({ tasks: controller.getTaskforEngineer(user) });\r\n            \r\n        }\r\n\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div className='body'>\r\n                <label>Pick an user: </label>\r\n                <select id='view' onChange={() => this.handleView()}>\r\n                    <option value={0}>Admin</option>\r\n                    {controller.getEngineers().map((value,index) => {\r\n                        return (<option value={value.id}>{value.name}</option>)\r\n                    })}\r\n                </select>\r\n\r\n\r\n            <div id='admin-panel' >\r\n                <div style={{\"display\":\"block\"}}>\r\n                    <label>Task:</label><br/>\r\n                    <textarea id='newtask'/><br/>\r\n                    <label>Engineer:</label>\r\n                    <select id='newtask_e'>\r\n                    {controller.getEngineers().map((value,index) => {\r\n                        return (<option value={value.id}>{value.name}</option>)\r\n                    })}\r\n                    </select>\r\n                    <br/>\r\n                    <button onClick={() => this.addTask()}>Add task</button>\r\n                </div>\r\n                <div className='center'>\r\n                    <label>Name:</label><br/>\r\n                    <input id='e_name'/><br/>\r\n                    <label>Role:</label><br/>\r\n                    <input id='e_role'/><br/>\r\n                    <button onClick={() => this.addEngineer()}>Add Engineer</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {this.state.tasks.map((value, index) => {\r\n                return (\r\n                    <Task key={index} task={value}/>\r\n                )\r\n            })}\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}