{"ast":null,"code":"import * as data from \"./tasks.json\";\nexport function getTasks() {\n  // First check if the data exists in the local storage and if yes take if from there\n  if (localStorage.getItem('tasks')) {\n    data.tasks = JSON.parse(localStorage.getItem('tasks'));\n  }\n\n  return data.tasks;\n}\nexport function getEngineers() {\n  if (localStorage.getItem('engineers')) {\n    data.engineers = JSON.parse(localStorage.getItem('engineers'));\n  }\n\n  return data.engineers;\n}\nexport function addTask(text, personID) {\n  var temp = {\n    \"id\": newTaskId(getTasks()),\n    \"text\": text,\n    \"personID\": personID,\n    \"done\": false\n  };\n  data.tasks.push(temp);\n  save();\n}\nexport function addEngineer(name, role) {\n  var temp = {\n    \"id\": newTaskId(getEngineers()),\n    \"name\": name,\n    \"role\": role\n  };\n  data.engineers.push(temp);\n  save();\n}\nexport function save() {\n  var tasks = data.tasks;\n  var engineers = data.engineers;\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n  localStorage.setItem('engineers', JSON.stringify(engineers));\n  location.reload();\n}\nexport function deleteTask(task) {\n  for (let i = 0; i < data.tasks.length; i++) {\n    if (data.tasks[i].id == task) {\n      data.tasks.splice(i, 1);\n      break;\n    }\n  }\n\n  save();\n}\nexport function getEngineersName(id) {\n  for (let i = 0; i < getEngineers().length; i++) {\n    if (getEngineers()[i].id == id) {\n      return getEngineers()[i].name;\n    }\n  }\n}\n\nfunction newTaskId(arr) {\n  var idCount = 0;\n  arr.map((value, index) => {\n    if (value.id > idCount) {\n      idCount = value.id + 1;\n    }\n  });\n  return idCount;\n}","map":{"version":3,"sources":["E:/Code/trustflight/src/store/actions.js"],"names":["data","getTasks","localStorage","getItem","tasks","JSON","parse","getEngineers","engineers","addTask","text","personID","temp","newTaskId","push","save","addEngineer","name","role","setItem","stringify","location","reload","deleteTask","task","i","length","id","splice","getEngineersName","arr","idCount","map","value","index"],"mappings":"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","sourcesContent":["import * as data from \"./tasks.json\"\r\n\r\n\r\nexport function getTasks() {\r\n    // First check if the data exists in the local storage and if yes take if from there\r\n    if (localStorage.getItem('tasks')) {\r\n        data.tasks = JSON.parse(localStorage.getItem('tasks'))\r\n    }\r\n        return data.tasks\r\n    \r\n    \r\n}\r\nexport function getEngineers() {\r\n    if (localStorage.getItem('engineers')) {\r\n        data.engineers = JSON.parse(localStorage.getItem('engineers'))\r\n    }\r\n    return data.engineers\r\n}\r\n\r\nexport function addTask(text, personID) {\r\n    var temp = \r\n    {\r\n        \"id\": newTaskId(getTasks()),\r\n        \"text\": text,\r\n        \"personID\": personID,\r\n        \"done\": false,\r\n    }\r\n    data.tasks.push(temp);\r\n    save()\r\n}\r\n\r\nexport function addEngineer(name, role) {\r\n    var temp = \r\n    {\r\n        \"id\": newTaskId(getEngineers()),\r\n        \"name\": name,\r\n        \"role\": role,\r\n    }\r\n    data.engineers.push(temp);\r\n    save();\r\n}\r\n\r\nexport function save() {\r\n    var tasks = data.tasks\r\n    var engineers = data.engineers\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n    localStorage.setItem('engineers', JSON.stringify(engineers));\r\n    location.reload();\r\n}\r\n\r\nexport function deleteTask(task) {\r\n    for(let i=0; i<data.tasks.length; i++) {\r\n        if(data.tasks[i].id == task) {\r\n            data.tasks.splice(i, 1);\r\n            break;\r\n        }\r\n    }\r\n    save();\r\n}\r\nexport function getEngineersName(id) {\r\n    for(let i=0; i<getEngineers().length; i++) {\r\n        if(getEngineers()[i].id == id) {\r\n            return getEngineers()[i].name\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction newTaskId(arr) {\r\n    var idCount = 0 \r\n    arr.map((value,index) => {\r\n        if(value.id > idCount) {\r\n            idCount = value.id+1;\r\n        }\r\n    })\r\n    return idCount;\r\n}"]},"metadata":{},"sourceType":"module"}